set $mod Mod4

set $left h
set $down j
set $up k
set $right l

# WARN: ENVIRONMENT VARIABLES
# set $wallpaper ~/Pictures/wallpapers/gruv_wall.jpg

set $gruvbox_bg_dark #282828
set $gruvbox_bg_light #504945
set $gruvbox_fg_dark #ebdbb2
set $gruvbox_fg_light #d5c4a1
set $gruvbox_red #cc241d
set $gruvbox_green #98971a
set $gruvbox_yellow #d79921
set $gruvbox_blue #458588
set $gruvbox_purple #b16286
set $gruvbox_aqua #689d6a
set $gruvbox_orange #d65d0e

set $notification_time 100



# output * bg $wallpaper fill


set $term alacritty

# set $menu wofi -I -i --show drun 
set $menu wofi -S drun -p Search -I -b -i


bindsym $mod+Return exec $term
bindsym $mod+Shift+q kill
bindsym $mod+d exec $menu
floating_modifier $mod normal
bindsym $mod+Shift+c reload

#TODO: add the open suse implementation
# bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# MOVING AROUND
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# MOVING WINDOWS
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# CHANGING WORKSPACES
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# MOVING WINDOWS TO WORKSPACES
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# SPLIT
bindsym $mod+b splith
bindsym $mod+v splitv

# LAYOUT
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
bindsym $mod+f fullscreen
bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle
bindsym $mod+a focus parent
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

mode "resize" {
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# include /etc/sway/config.d/*

# include ~/.config/sway/configs/*



input '1:1:AT_Translated_Set_2_keyboard' {
    xkb_layout it
}

input '1452:591:NuPhy_Halo65' {
    xkb_layout us
}


# mouse config 
input '1739:52656:MSFT0021:00_06CB:CDB0_Touchpad' {
    tap enabled
    natural_scroll enabled
    dwt enabled
}

input type:pointer {
    accel_profile "flat" # disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat")
    pointer_accel 0.5 # mouse sesnitivity
}


# set cloding lid to lock laptop
set $laptop 'eDP-1'
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

# exec swayidle -w \
#   timeout 300 'swaylock -e -f -i ' $wallpaper \
#   timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#   before-sleep 'swaylock -e -f -i ' $wallpaper


# set $mode_system "What to do? (l) lock, (e) logout, (r) reboot, (s) suspend, (Shift+s) shutdown"
set $mode_system "What to do? (l) lock, (e) logout, (r) reboot, (Shift+s) shutdown"

# Idle configuration
exec swayidle -w \
          timeout 300 swaylock -e -f \
          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
          before-sleep swaylock -e -

mode $mode_system {
	# bindsym l exec swaylock -e -f -i $wallpaper; mode "default"
	bindsym l exec swaylock -e -f; mode "default"
	bindsym e exec swaymsg exit; mode "default"
	bindsym r exec systemctl reboot; mode "default"
  # bindsym s exec systemctl suspend; mode "default"
	bindsym Shift+s exec systemctl poweroff; mode "default"

	# back to normal: Enter or Escape
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
# disable $mod+Shift+e if necessary
# unbindsym $mod+Shift+e
bindsym $mod+Escape mode $mode_system





# Media keys


# Audio
set $audio_notification_cmd command -v notify-send >/dev/null && \
  VALUE=$(pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}') && \
  notify-send -e -h string:x-canonical-private-synchronous:audio \
  -h "int:value:$VALUE" -t $notification_time "Volume: ${VALUE}%"

set $mute_notification_cmd command -v notify-send > /dev/null && \
  VALUE=$(pactl get-sink-mute @DEFAULT_SINK@ | head -n 1 | awk '{print $2}') && \
  notify-send -e -h string:x-canonical-private-synchronous:audio \
  -h "string:x-canonical-private-synchronous:audio" -t $notification_time "Mute: ${VALUE}"

set $mute_mic_notification_cmd command -v notify-send > /dev/null && \
  VALUE=$(pactl get-source-mute @DEFAULT_SOURCE@ | head -n 1 | awk '{print $2}') && \
  notify-send -e -h string:x-canonical-private-synchronous:audio \
  -h "string:x-canonical-private-synchronous:audio" -t $notification_time "Mic Mute: ${VALUE}"

bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && $mute_notification_cmd
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && $audio_notification_cmd
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && $audio_notification_cmd
bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle && $mute_mic_notification_cmd




# set $pactl playerctl -p spotify
# # Skip Super + n to go to next song
# bindsym --locked $mod+n exec $pactl next
# # Skip Super + p to go to previous song
# bindsym --locked $mod+p exec $pactl previous


# Brightness

set $brightness_notification_cmd  command -v notify-send >/dev/null && \
  VALUE=$(light) && VALUE=${VALUE%%.*} && \
  notify-send -e -h string:x-canonical-private-synchronous:brightness \
  -h "int:value:$VALUE" -t $notification_time "Brightness: ${VALUE}%"

bindsym XF86MonBrightnessDown exec 'STEP="$brightness_step" && brightnessctl set 5%- && $brightness_notification_cmd'
bindsym XF86MonBrightnessUp exec 'STEP="$brightness_step" && brightnessctl set +5% && $brightness_notification_cmd'

bindgesture swipe:right workspace prev
bindgesture swipe:left workspace next


bar {
  swaybar_command waybar
}


set $screenshot_notification_cmd  command -v notify-send >/dev/null && \
        notify-send -t $notification_time "Screenshot copied to clipboard " 

bindsym {
    # Capture the currently active output
    Print       exec grimshot copy output && $screenshot_notification_cmd
    # Capture the currently active window
    Shift+Print   exec grimshot copy active && $screenshot_notification_cmd
    # Select and capture a custom rectangular area
    Ctrl+Print  exec grimshot copy area && $screenshot_notification_cmd
}

bindsym {
    # Capture the currently active output
    $mod+Shift+p       exec grimshot copy output && $screenshot_notification_cmd
    # # Capture the currently active window
    # $mod+Shift+p   exec grimshot copy active && $screenshot_notification_cmd
    # Select and capture a custom rectangular area
    $mod+Ctrl+p  exec grimshot copy area && $screenshot_notification_cmd
}




exec wlsunset -l 44.8 -L 10.3 -t 3500
# exec dropbox
# exec solaar --window=hide
# exec flatpak run com.dropbox.Client
exec nextcloud
exec flatpak run org.keepassxc.KeePassXC
exec mako
exec blueman-applet
exec nm-applet --indicator
# exec_always --no-startup-id workstyle &> /tmp/workstyle.log
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id gnome-keyring-daemon --start --components=pkcs11,secrets,ssh
exec xss-lock -- swaylock -e -f
exec wl-paste -t text --watch clipman store --no-persist
exec dbus-update-activation-environment --systemd DISPLAY XAUTHORITY WAYLAND_DISPLAY SWAYSOCK

# Gruvbox color scheme

# borders
default_border pixel

# gaps
smart_gaps on
gaps outer 5
gaps inner 3

# the oder is : border, bg, text, indicator
# Focused window border colors
client.focused $gruvbox_bg_dark $gruvbox_blue $gruvbox_fg_dark $gruvbox_blue

# Unfocused window border colors
client.unfocused $gruvbox_bg_dark $gruvbox_bg_dark $gruvbox_fg_light $gruvbox_bg_light

# Urgent window border colors
client.urgent $gruvbox_bg_dark $gruvbox_red $gruvbox_fg_dark $gruvbox_red




exec_always {
    gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-dark'
    gsettings set org.gnome.desktop.interface icon-theme 'Adwaita'
    gsettings set org.gnome.desktop.interface cursor-theme 'Adwaita'
    gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'
}
